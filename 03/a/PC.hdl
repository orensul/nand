// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];


    PARTS:
    // if reset is true so the output should be 0
    // if inc is true and load is true the output should be inc of the prev output
    // else (load = 0 or inc = 0) output does not change
    

	Inc16 (in = output1, out = incIn); 
	//every letter is another position of the machine sel[0]=inc, sel[1] = load, sel[2] = reset:
	// a = 000 , b = 110 , b = 100, d = 010
	// reset state: e = 001,f = 011,g =101, h=111
	Mux8Way16 (sel[0]=inc, sel[1] = load, sel[2] = reset , a = output1, b = incIn, c = in, d = in, e = false, f = false,g = false, h = false, out = outMux );
	Register (in = outMux, load = true, out = out, out = output1); \\  output1 save the previous stream of the Register
	}
 
