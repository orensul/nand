// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int MAX_ASCII_CODE, MAX_LINE_LENGTH;
    static Array keyboard;

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        let MAX_ASCII_CODE = 152;
        let MAX_LINE_LENGTH = 64;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyboard); 
    }

   
    function char readChar() {
        var int c, key;
        let key = 0;
        // waits until a key is pressed
        while (key = 0){
            let key = Keyboard.keyPressed();
        }
        let c = key;
        // waits until the key is realeased
        while (key = c){
            let key = Keyboard.keyPressed();
        }
        // display c at the current cursor location, advance cursor
        do Output.printChar(c);
        return c;
    }

    /**                             
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;
        var String s;
        var int line_length;
        let line_length = MAX_LINE_LENGTH;
        let s = String.new(line_length);

        // print to the user the message
        do Output.printString(message);

        while(true){
            let c = Keyboard.readChar();
            if (c = 128){
                do Output.println();
                return s;
            }
            if (c = 129){
                do s.eraseLastChar();
            }
            else{
                do s.appendChar(c);
            }
        }
        return s;
    }   


    /**                             
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String s;
        let s = Keyboard.readLine(message);
        // using of intValue method of String.jack to return the int value of s
        return s.intValue();
    }
}
