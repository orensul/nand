// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Adder16.hdl

/**
 * divde by 2
 * preserves the sign and move on bit right
 */

CHIP ShiftRight {
    IN in[16];
    OUT out[16];

    PARTS:
     // if the left most bit is 1 so it's a negative number and we want to save 1 
     // in the left most bit in the output because after the division by 2 it's still
     // a negative
     Or(a = false, b = in[15], out = out[15]);
     // for i = 14 to 0
     // the bit number i in the output will be the bit number i+1 in the input
     // in order to save the bit i+1 we will do And with true so we preserves this bit
     // if it was 1 so And(1,true) = 1, if it was 0, so And(0,true) = 0
     And(a = true, b = in[15], out = out[14]);
     And(a = true, b = in[14], out = out[13]);
     And(a = true, b = in[13], out = out[12]);
     And(a = true, b = in[12], out = out[11]);
     And(a = true, b = in[11], out = out[10]);
     And(a = true, b = in[10], out = out[9]);
     And(a = true, b = in[9], out = out[8]);
     And(a = true, b = in[8], out = out[7]);
     And(a = true, b = in[7], out = out[6]);
     And(a = true, b = in[6], out = out[5]);
     And(a = true, b = in[5], out = out[4]);
     And(a = true, b = in[4], out = out[3]);
     And(a = true, b = in[3], out = out[2]);
     And(a = true, b = in[2], out = out[1]);
     And(a = true, b = in[1], out = out[0]);
    
     
}